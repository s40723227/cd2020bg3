var tipuesearch = {"pages": [{'title': 'Assignment', 'text': 'Assignment1 \n Assignment2 \n Assignment3 \n Final project \n', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': 'PDF檔連結:\xa0 https://drive.google.com/open?id=17OPxqxjxZZ5O4yflej72x060fdII4zVc \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Random grouping', 'text': 'Describe how to do an efficient random grouping for this course or do the roll calling randomly? \xa0 要進行隨機分組及隨機點名，必須先了解程式裡導入的模組及在模組中所用的 語法、迴圈: request 、 ast.literal_eval 、 random 、 for 迴圈 (1) \xa0 request 模組:此模組是為了可以使用 Python 來下載網頁上的資料，是以 request 模組建立適當的 HTTP 請求，透過 HTTP 請求從網頁伺服器下載 指定的資料，分為兩種模式Post、Get。 參考文獻: \xa0 https://ithelp.ithome.com.tw/articles/10206215 (2) \xa0 ast 模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助 ast 模組可以從語法樹的角度分析原始碼結構，其中的語法 ast.literal_eval 是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符 串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字 節、數字、元組、列表、字典、集合、布林值、None。 參考文獻: \xa0 https://docs.python.org/3/library/ast.html https://www.itread01.com/content/1544847254.html (3) \xa0 random 模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取 choice 、隨機選取 \xa0 sample \xa0 (一次選多筆資料)、隨機調換順序 \xa0 shuffle \xa0 (就 地調換順序)、隨機取得亂數 \xa0 random \xa0 (0~1之間的隨機亂數)、隨機取得亂 數 \xa0 uniform \xa0 (可以指定範圍)。 參考文獻: \xa0 https://ithelp.ithome.com.tw/articles/10207483 (4) \xa0 for 迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴 圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行， 是程式設計中很重要的一種控制結構，且分為兩類: for 、 while \n ○ \xa0 for 迴圈基本語法: for \xa0 變數 \xa0 in \xa0 list 、 字串 、 range ○ \xa0 while 迴圈基本語法: while \xa0 布林值 \xa0 for 迴圈及 while 迴圈比較: \xa0 for 迴圈比較適用在已知迴圈數的問題，而 while 迴圈則適用在「無法預知迴圈數」的問題上。 參考文獻: \xa0 https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6 \xa0 總結:在隨機分組及抽點的程式中，利用request模組中的request.get(link) 語法將網址中的學員學號資料擷取下來，接著利用ast模組中的ast.literal_eval 語法將資料原始碼進行分析並轉換，再來利用random中的random.suffle語 法及for迴圈將學員學號打亂並進行分組或抽點。在隨機分組及抽點的程式碼， 要更加有效的執行隨機分組及點名，要先了解其中的模組及語法，然而從中進 行修改。 \n \n \n', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Portable system', 'text': 'Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n 重新創建python3.8.2隨身系統 \n 操作影片: \n \n 操作步驟: 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及 wscite432、portablegit 。 2.進入 Python 官網。 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 4.滑至最底，找到 Windows x86-64 executable installer 並下載。 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 6.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 7.建立新的start.bat及stop.bat。 \n start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo   off \n set   Disk = y \n subst  % Disk % :  "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set   HomePath = % Disk % :\\home \n set   HomeDrive = % Disk % :\\home \n set   Home = % Disk % :\\home \n set   USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set   PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set   PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set   PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set   path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set   path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set   path_git = % Disk % :\\portablegit\\ bin ; \n set   path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n \xa0 \xa0 \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo   off \n set   Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill  / IM python.exe  / F \n taskkill  / IM pythonw.exe  / F \n taskkill  / IM scite.exe  / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst  % Disk % :  / D \n REM 關閉 cmd 指令視窗 \n taskkill  / IM cmd.exe  / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n 8. 下載MSYS2 \xa0 msys2-x86_64-20190524.exe \xa0至data下。 9. 下載 PortableGit\xa0 64-bit Git for Windows Portable\xa0 至\xa0 portablegit下。 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'Four wheel car', 'text': 'What do you need to know from \xa0 http://www.coppeliarobotics.com/helpFiles/index.htm \xa0 to implement a fourwheeled robot? 部分內容翻譯概述: Simulation & Simulation settings dialog : \xa0 在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因顯示卡的效能不足而造成模擬之屏幕刷新率太慢……等。 BubbleRob tutorial : \xa0 此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。 Line following BubbleRob tutorial : \xa0在此教程中，旨在擴展 BubbleRob 的功能，以使 BubbleRob 遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 External controller tutorial : \xa0 此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人） : 第四種方法是通過ROS節點， ROS 與遠程 API 相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（ BØ ）節點，與 ROS 類似， BlueZero 是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。 總結 : \xa0 最後要完成四輪機器人必須了解模擬程式的操作，包含模型的設置及各模型組合、各模型的物理特性設置、感測器設置、視覺感測器設置、外部控制器的選擇及設置、路徑程式碼設置，還有模擬時會發生的狀況處理，須達到這些基本的設置才能完成四輪機器人的設計。 \n', 'tags': '', 'url': 'Four wheel car.html'}, {'title': 'Assignment2', 'text': 'PDF檔連結: https://drive.google.com/open?id=17jSIkT6aVfdJNgnMjEeU5xTDtbZOdHww \n', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'Topic 0', 'text': 'Topic 0: From Digital\xa0to Industrial + Engineering Product Design Collaboration \n DigitalProductCollaboration.pdf \n 本文主要講述如何透過協同設計出更好的產品，內容介紹什麼是協同、協同為什麼很重要、如何使用設計協同工具讓協同更有效率、合作流程。 \n \xa0 其中介紹的設計協同工具，包括 : \n FlGMA: \n Figma是一個以協作為優先的共享工作區工具， \xa0 Figma 非常適合多個人在設計文件的同一區域中進行產品設計，可以觀看隊友的設計或在同一個設計上一起工作。 \n MARVEL: \n Marvel是一個更簡潔、規範和專注的空間，非常適合與非設計團隊成員進行協 作，它消除了客戶為帳戶付款或對工具進行深入了解的所有需求，客戶可以下載屏幕，並通過 Marvel 應用程序在設備環境中查看它們的運行情況。 \n ZEPLIN: \n Zeplin是一種傳遞工具，使開發人員可以深入研究設計工作的細節。 \n QUIP: \n Quip是集思廣益在產品/流程文件的絕佳平台，可以使用它來記錄和組織團隊 成員在項目上需要了解的所有環境和知識，對於集思廣益新思路而不是視覺關 注的新想法也很有用。 \n \xa0 合作流程: \n 階段 1 ： 線框和自由討論，即先有產品的框架和讓設計師、工程師自由討論。 階段 2 ： 研究與背景，即延伸產品的框架去想如何設計產品及去思考市場商機與需求。 階段3： 迭代和反饋，即匯集設計師、工程師的想法，同時確保符合客戶的期望。 階段 4 ： 客戶的反饋和發展，即從客戶的反饋及意見，而將產品以此方向改良、發展。 \n 總結: 透過本文了解了什麼是協同、協同的重要性，以協同的方式去設計產品，會更加有效率、設計出來的產品更加優良，也藉由協同的方式發覺每個人的專長及技藝，最後必須通過正確的思維方式、工具和流程、設計協調才能達到協同的目的。 \n IndustrialAndEngineeringProductDesignCollaboration.pdf \n 本文主要講述工業設計師和工程設計師如何協作，以及如何將這種合作體現在設計過程中。其中有四種類型的典型協同產品設計流程及其特徵: \n 類型 1 ： 由工業設計師主導的概念驅動過程。 \n \n 類型 2 ： 由 工業設計師主導的內外聯合過程。 \n \n 類型 3 ： 由工程設計師主導的由內到外的流程。 \n \n 類型 4 ： 工業設計師與工程設計師協同流程。 \n \n 總結: 從本文中藉由深入採訪6個產品的34名工業設計師及工程設計師，而取得各種協同合作所需的數據，再經由這些數據設計出流程，讓整個設計流程可以更有效率。 \n', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'Topic 1', 'text': 'MechanicalDesignProcess.pdf . \n Ch1 \xa0 成功的設計: \n 第一章主要講述如何做出一項成功的設計，在要進行設計時必須先組成團隊，依設計的產品而決定團隊大小、產品所需的工程，接著依產品要求提出分析資料、市場調查，然後再依分析資料進行產品的設計草會與細節的調整，最後進行討論、溝通，以及最後的工程經濟分析。 \n Ch2 \xa0 構建設計: \n 第二章主要講述設計產品的流程及要素，設計通常會從產品構思開始，設計方向分為三種 : \xa0 1.全新的設計 2. 延續（或增加）現有設計 3. 現有設計的重大修改，決定好方向後必須構思草圖，然後審查想法並授權進行原型製作，接著繪製（文件創建）原型製造的設想方案，再來進行原型分析、測試原型是否符合規範，再提出修訂，進行更改以改進原型（工程圖和原型），接著在進一步的分析與測試，進行第二次的修訂，最後文件製作 \xa0 / 最終測試 / 最終審查 / 正式批准生產發布的設計，這些就是設計產品的流程。 然而，設計產品所需要注意的要素有最佳對象放置、間隙距離、對象排列，最佳對象放置是指可以將大多數設計視為物體在空間中的物理放置，而放置的位置是否能發揮此物體最佳功用、是否安全；間隙距離是指物體與物體之間的距離，通常依產品所需的公差進行設計；對象排列是指通過生產排列所有適合安裝在外殼中的物體的方式來最大程度地減小外殼的整體尺寸。 \n Ch3 \xa0 考量結構問題: \n 第三章主要講述產品的結構問題，主要分為材料強度、結構設計過程、需求分析、靜載荷、動態負載進而討論，在設計產品時必須考量結構的問題，必須先了解產品所需的強度而去挑選適合的材料，接著必須分析材料、產品的應力、產品的扭矩、產品所受的靜載荷，其中靜載荷的問題考量非常重要，靜載荷的產生主要由 :1. 構件的體重 2. 其他成員施加的載荷 3. 由於熱效應，殘餘應力等引起的負載 而引起，靜載荷會通過施加力而導致構件失效，從而導致 : \xa0 1.超過材料的屈服強度 \xa0 2. 構件的過度偏轉導致構件撓曲。 \n Ch4 \xa0 材料與工藝: \n 第四章主要講述產品所需的最佳材料與工藝，產品若已經符合規格的要求，接著就必須考慮到設計的成本，再經由這些成本分析而去決定產品所用的材料與工藝，成本分析的項目包括 : \xa0 零件的材料、零件需要的表面處理、零件所需的尺寸精度、生產零件的過程、零件所需的數量、零件需要的第二次操作、零件的成本要求、該零件是否可以與設計中的另一零件組合、零件是否可做成對稱的（為了便於組裝）。而材料的選擇又分為 : \xa0 強度要求、重量要求、可靠性要求、法規要求、安全要求、熱要求、屏蔽要求（ EMI/RFI ）、金屬的兼容性要求（電腐蝕）、彈性要求（硬度計）、導電（或絕緣）要求、不透明要求、磨損要求、美學要求（觸覺、視覺）、聲學要求、紫外線（ UV ）透射和阻力要求。這些就是依產品品質與成本所需分析的項目，在進而決定需要使用到哪些工藝。 \n', 'tags': '', 'url': 'Topic 1.html'}, {'title': 'Assignment3', 'text': 'PDF檔連結: https://drive.google.com/open?id=1MHOYaFn9Du7UnhU9cJ0GqIthIQQSc4t4 \n', 'tags': '', 'url': 'Assignment3.html'}, {'title': 'Topic2', 'text': 'MSModelingAndTFApproaches \n 概述: 此書主要介紹機電一體化系統的結構和不同組件，以及機電一體化過程中所遇到的問題，主要分為五個章節講述 : 1.介紹。 2.機電一體化系統。 3.數學建模。 4.基於傳遞函數的分析。 5.基於傳遞函數的設計。 \xa0 \xa0此書重於分析、設計和實現由微控制器的連續時間系統；在建模的部分，使用傳遞函數或空間狀態來表示系統的模型；在傳遞函數方法的部分，將連續時間系統的模型轉換為離散時間在空間狀態逼近的部分，並採用不同的技術進行分析及綜合；實施的部分，則是介紹如何實現在傳遞函數或基於時間狀態的控制中開發控制演算法。 \n 1.介紹: 此章節主要講述機電一體化所需的零件設計，主要分為兩大類 :(1) 機械零件設計 (2) 電子電路零件設計。 (1)機械零件設計: 機械是機電系統中的基本部分，在此部分的階段設計中，將構思和製造組成機電一體化系統，而將用於此機電一體化系統的執行器和傳感器。對於機械零件的設計，使用了機械設計的步驟，例如問題的定義，使用集思廣益或任何等效方法進行的解決方案研究、實用性研究、原型設計等。執行器和傳感器的選擇也必須遵循所使用的準則和規範。 (2)電子電路零件設計: 如此書 MechatronicDesignCases 所介紹。 \n 2.機電一體化系統: 此章節主要講述機電一體化系統設計的兩種方法，第一種方法是先進行機械設計，在獲得滿意的機械設計後，在進行電子系統的設，最後在設計控制系統；而第二種方法則是在機械、電子和控制系統設計的同時，考慮每個系統的設計及對其他兩個系統的影響。第二種設計方法主要優點為可以對每個系統進行最佳設計，從而實現最佳整體的性能。 \n 3.數學建模: 數學建模是一種使用數學語言 ( 微分方程式或差分方程式 ) 來描述動力學系統行為的表示，以描述輸入與輸出的動態系統參數之間的關係，動態系統的數學建模主要以取決於如何處理時間變量分為兩種 :(1) 連續時間數學建模 (2) 離散時間數學建模。 (1)連續時間數學建模: 為基於一組對時間變量的任何值均有效的微分方程組。 (2)離散時間數學建模: 為僅在選定的一組不同時間提供有關物理系統狀態的信息。 4.基於傳遞函數的分析: 傳遞函數主要是微控制器在處理在機電系統中，他用於開 / 關或連續時間控制，對於連續時間情況，微控制器在每個採樣週期重新接收數據，並根據選擇的算法計算所需的動作。當使用微控制器控制實際過程時，可以採用兩種結構。在第一種結構中，輸出和參考之間的誤差是連續不斷的，然後通過模數轉換器（ A / D ）發送到微控制器，並根據所選算法計算控制動作，而在第二種結構中，輸出將通過 A / D 轉換為數字值。 (1)信號轉換在前向路徑中進行: (2)在反饋路徑中進行信號轉換: 5.基於傳遞函數的設計: 在獲得系統的數學建模後，通過定義所需的性能來開始設計過程，這將能夠確定控制器的結構及其參數；控制系統的設計通常是為了保證某些性能；考慮系統的閉環動力學，可以將這種性能概括為瞬態和穩態狀態的穩定性和行為，通過尊重給定系統的局限性，通常情況下，我們會通過尋找系統可能存在的過衝與其速度之間的折衷來尋求改善瞬態的方法，對於穩態，我們進行搜索以確保誤差小於某個選定的公差。在藉由這些條件經由上章節的傳遞函數分析進行一連串的傳遞函數設計，達到機電一體化的目的。 \n 總結: 透過此書，我們理解到機電一體化並不是那麼容易，必須先考慮機械與電子電路的設計，還須經過數學建模，完成動力學系統的作動，最後再進行傳遞函數的分析與設計，最終才能達到機電一體化。 \n MechatronicDesignCases \n 概述: \n 主要分別介紹四個機電套件 : 1.直流電動機的速度控制。 2.直流電動機的位置控制。 3.平衡裝置的控制。 4.磁懸浮系統。 直流電動機電子電路圖: \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 平衡裝置電子電路圖: \n 1.直流電動機的速度控制和位置控制: 大多數的電機系統都採用此類直流電動機，採用此系統首先必須考慮系統具有的理想性能 :(1) 系統穩定在閉環狀態 (2) 建立時間 t s為 2 ％等於我們可以擁有的最佳時間 \xa0 (3) 超調等於 5 ％ \xa0 (4) 階躍函數作為輸入的穩態等於零。然而該電動機的數據表給出了所有重要參數，因此容易獲得該執行器的傳遞函數，此傳替函數是藉由帶有刻度的小磁盤作為負載，使磁盤速度和輸入電壓之間產生傳遞函數，然而利用傳遞函數當作數據而達到控制直流電動機的速度，再藉由傳遞函數及速度控制導出的結果來控制位置。 \n 2.平衡裝置的控制: 平衡裝置是一個具有挑戰性的系統，因為它屬於一個不穩定的開環系統，平衡裝置的概念為研究目的而開發的，它能使正在學習機電一體化的學生能夠達成他們的控制算法並熟悉複雜的系統。 \n 3.磁懸浮系統: 磁懸浮系統由兩部分組成 : 一個固定的部分代表線圈並產生電磁力，另一個是通過作用於電磁場產生的電磁力而放置在某個位置的鐵磁物體，該系統的目的是通過輸入電壓調節電磁體中的電流來控制移動物體的垂直位置。使用霍爾效應傳感器測量物體位置。 dsPIC30F4011 周圍的電子電路通過一個集成電路 L298 向線圈供電，電流與致動器的指令電壓成正比。由於磁力僅具有吸引力，因此互導放大器會關閉以執行負命令。 \n 總結: 通過閱讀此書中的幾個電機套件，了解到機電一體化系統的設計和實驗的知識，在機電控制方面是非常困難的，首先要先達到套件的執行條件，再經由許多實驗導出來的公式和一些輔助裝置才能夠達成。 \n', 'tags': '', 'url': 'Topic2.html'}, {'title': 'Topic3', 'text': 'MechaFutureAndChallenges \n 概述 : 機電一體化領域最早開始於 1970 年代，當時機械系統需要更精確的受控運動。 這迫使工業界和學術界探索傳感器和電子輔助反饋，引入反饋控制的運動構成了使機械工程師和電子工程師能夠更好地協作並相互理解語言的基礎，並且採取了各種舉措來發展共同的語言或方法，然而機電一體化成為一門新興學科。 \xa0 \xa0 其中在機械工程師和電子工程師之間的溝通與資料的傳輸與物聯網有相當重要的關係 : \xa0 然而其設計方面通常遵循簡化 V 型路徑 : \n 總結: 通過閱讀此書，了解機電一體化的重要性，以及機電一體化的未來、機電一體化所要面對的挑戰，隨著時代進步，機電一體化的要求越來越高，需要解決的問題是多向性，且複雜的，在機電一體化的未來我們將面臨極大的挑戰。 \n MechaEducFutureNeed \n 概述: 此書分成兩章節，分別講述機電一體化教育的重要性及其教育方法，以及全球的趨勢與其對機電一體化的影響。 \n 機電一體化教育的重要性及其教育方法: 機電一體化能大幅地提高和改善系統的性能，在工業方面占有極大的優勢，成為現代學生必須研究的方向，而其教育方法分為 :(1) 演講 (2) 講座討論 (3) 示範 (4) 模擬 (5) 協同學習 (6) 合作學習 (7) 實例探究 (8) 角色扮演 全球的趨勢與其對機電一體化的影響: 對於全球趨勢，主要分別為 :(1) 人口變化以及老齡化社會醫療系統） (2) 流動性 \xa0 (3) 全球化以及勞力、經濟、金融的變化 (4) 城市化和個性化 (5) 氣候變化和環境變化以及能源和資源、持續性 (6) 智慧型社會以及無所不在的情報、數位文化。 \xa0 \xa0這些趨勢的結果也是該技術必須向前發展，由於多種學科的結合，機電一體化產品具有很高的產品開發潛力。然而機電一體化必須考慮的眾多方面 :(1) 問題與挑戰 (2) 系統設計、建模和模擬 (3) 製造技術 (4) 物聯網和網路物理系統 (5) 通訊及訊息技術 (6) 機電一體化的教育。 機電一體化未來地圖: \n', 'tags': '', 'url': 'Topic3.html'}, {'title': 'Final project', 'text': 'PDF檔連結: https://drive.google.com/file/d/13qe05xQ9ljoyVFDf0gX9ciEJNW6Yv6qI/view?usp=sharing \n', 'tags': '', 'url': 'Final project.html'}, {'title': 'Meeting minutes', 'text': 'Meeting minutes1 \n \n 開會紀錄PDF: https://drive.google.com/openid=1R3UElFfUhid4D7hocedXO69w5lPEYi1M \n \n \n \n \n 作業一: 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 工作分配表: \n \xa0 \n Meeting minutes2 \n 第三組第二 次直播會議 \n 開會紀錄PDF連結: https://drive.google.com/open?id=1afrCAJJtArv94qnTK2zOsPor7WmpeaPH \n \n 作業二: \n \n 根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊為了完成作業 1 的四輪機器人需要做些什麼 ? \n 您需要從 https://cyberbotics.com/doc/guide/index 了解什麼來實現四輪機器人？ \n \n 工作分配表: \n \n \xa0 \n 第三次直播會議 \n 開會紀錄PDF連結: https://drive.google.com/open?id=1AP49O_JYqgqQNDzEz7Pxj-tzjugL8Bb2 \n \n 作業三 : 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshap e 提出一個機電一體化項目。 \n 工作分配表: \n \n 第四次小組會議 \n 第五次小組會議 \n \n \n', 'tags': '', 'url': 'Meeting minutes.html'}, {'title': 'About', 'text': 'group 3 Repository: \xa0 40623114 \xa0 | Site: \xa0 40623114 Repository:\xa0 40623121 \xa0 | Site: \xa0 40623121 Repository: \xa0 40723203 \xa0 | Site: \xa0 40723203 Repository: \xa0 40723205 \xa0 | Site: \xa0 40723205 Repository: \xa0 40723207 \xa0 | Site: \xa0 40723207 Repository: \xa0 40723209 \xa0 | Site: \xa0 40723209 Repository: \xa0 40723218 \xa0 | Site: \xa0 40723218 Repository: \xa0 40723219 \xa0 | Site: \xa0 40723219 Repository: \xa0 40723227 \xa0 | Site: \xa0 40723227 \xa0(group leader) Repository: \xa0 40723233 \xa0 | Site: \xa0 40723233 Repository: \xa0 40723239 \xa0 | Site: \xa0 40723239 Repository: \xa0 40723247 \xa0 | Site: \xa0 40723247 Repository: \xa0 40739214 \xa0 | Site: \xa0 40739214 \n', 'tags': '', 'url': 'About.html'}, {'title': 'E-book translation content', 'text': 'CoppeliaSim User Manual \n DesignCollaborationBetterProducts \n IndustrialAndEngineeringProductDesignCollaboration \n MechanicalDesignProcess \n MechaEducFutureNeed \n MechatronicDesignCases \n MechaFutureAndChallenges \n', 'tags': '', 'url': 'E-book translation content.html'}, {'title': 'CoppeliaSim User Manual', 'text': 'PDF連結: https://drive.google.com/file/d/1QQAyqm9VjunnozFMYdrV4K7ktpkjgVOu/view \n', 'tags': '', 'url': 'CoppeliaSim User Manual.html'}, {'title': 'DesignCollaborationBetterProducts', 'text': 'PDF連結: https://drive.google.com/open?id=1kvE7Hs0IS3Vl3BSNi_b9Vw2FyAuz8QIo \n', 'tags': '', 'url': 'DesignCollaborationBetterProducts.html'}, {'title': 'IndustrialAndEngineeringProductDesignCollaboration', 'text': 'PDF連結: https://drive.google.com/open?id=1rXziKtBaPWAV0jGWID44VoR8L4DC5oRL \n', 'tags': '', 'url': 'IndustrialAndEngineeringProductDesignCollaboration.html'}, {'title': 'MechanicalDesignProcess', 'text': 'PDF連結: https://drive.google.com/open?id=1iBYGVgiToxcX7ojaH_K9bcyrH0c_ZYxB \n', 'tags': '', 'url': 'MechanicalDesignProcess.html'}, {'title': 'MechaEducFutureNeed', 'text': 'PDF連結: https://drive.google.com/open?id=1krFCMcUm9fSGAvucUenGpOzQtTFRYD8G \n', 'tags': '', 'url': 'MechaEducFutureNeed.html'}, {'title': 'MechatronicDesignCases', 'text': 'PDF連結: https://drive.google.com/open?id=1rS3oOM3-4vzule-NYNHD_98Eu5vKpv98 \n', 'tags': '', 'url': 'MechatronicDesignCases.html'}, {'title': 'MechaFutureAndChallenges', 'text': 'PDF連結: https://drive.google.com/open?id=19DRKT5qFuAZg9wAsXcTMf_szifX0RWWP \n \xa0', 'tags': '', 'url': 'MechaFutureAndChallenges.html'}]};